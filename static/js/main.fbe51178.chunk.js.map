{"version":3,"sources":["CosmonautTable.js","FormErrors.js","CosmonautForm.js","App.js","reportWebVitals.js","index.js"],"names":["CosmonautTableBody","props","cosmonauts","map","cosmonaut","index","name","surname","birth","superpower","className","type","onClick","removeCosmonaut","CosmonautTableHeader","CosmonautTable","FormErrors","errors","Object","keys","i","CosmonautForm","emptyFormState","nameValid","surnameValid","birthValid","formValid","formErrors","onCosmonautFormSubmit","handleCosmonautFormSubmit","state","setState","handleAddCosmonautChange","event","target","value","validateField","match","Date","getTime","validateForm","submit","fetch","method","headers","body","JSON","stringify","bind","this","htmlFor","id","onChange","disabled","Component","App","currentState","filter","then","res","json","data","formatDate","catch","error","console","log","dateString","date","getFullYear","getMonth","getDate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbe51178.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst CosmonautTableBody = (props) => {\r\n    return (\r\n        <tbody>\r\n            {props.cosmonauts.map((cosmonaut, index) => {\r\n                return (\r\n                    <tr key={index}>\r\n                        <td>{cosmonaut.name}</td>\r\n                        <td>{cosmonaut.surname}</td>\r\n                        <td>{cosmonaut.birth}</td>\r\n                        <td>{cosmonaut.superpower ? cosmonaut.superpower : \"none\"}</td>\r\n                        <td>\r\n                            <button className=\"button-delete\" type=\"button\" onClick={() => props.removeCosmonaut(index)}>Delete</button>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })}\r\n        </tbody>\r\n    )\r\n}\r\n\r\n\r\nconst CosmonautTableHeader = () => {\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th>First name</th>\r\n                <th>Surname</th>\r\n                <th>Date of birth</th>\r\n                <th>Superpower</th>\r\n                <th></th>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\n\r\nconst CosmonautTable = (props) => {\r\n    return (\r\n        <table className=\"cosmonaut-table\">\r\n            <CosmonautTableHeader />\r\n            <CosmonautTableBody cosmonauts={props.cosmonauts} removeCosmonaut={props.removeCosmonaut} />\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default CosmonautTable","import React from 'react'\r\n\r\nconst FormErrors = ({ errors }) => {\r\n    return (\r\n        <div className=\"form-cosmonaut-error\">\r\n            {Object.keys(errors).map((name, i) => {\r\n                if (errors[name]) {\r\n                    return <p key={i}>{errors[name]}</p>\r\n                }\r\n                return ''\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormErrors","import React, { Component } from 'react'\r\nimport FormErrors from './FormErrors'\r\n\r\nclass CosmonautForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = this.emptyFormState\r\n\r\n        this.handleAddCosmonautChange = this.handleAddCosmonautChange.bind(this)\r\n        this.onCosmonautFormSubmit = this.onCosmonautFormSubmit.bind(this)\r\n        this.validateField = this.validateField.bind(this)\r\n        this.validateForm = this.validateForm.bind(this)\r\n        this.submit = this.submit.bind(this)\r\n    }\r\n\r\n\r\n    emptyFormState = {\r\n        name: '',\r\n        nameValid: false,\r\n\r\n        surname: '',\r\n        surnameValid: false,\r\n\r\n        birth: '',\r\n        birthValid: false,\r\n\r\n        superpower: '',\r\n\r\n        formValid: false,\r\n        formErrors: {\r\n            name: '',\r\n            surname: '',\r\n            birth: '',\r\n        }\r\n    }\r\n\r\n\r\n    onCosmonautFormSubmit = () => {\r\n        this.props.handleCosmonautFormSubmit(this.state)\r\n        this.setState(this.emptyFormState)\r\n        //this.submit() no POST on mockend\r\n    }\r\n\r\n\r\n    handleAddCosmonautChange = (event) => {\r\n        const { name, value } = event.target\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        }, () => { this.validateField(name, value) })\r\n    }\r\n\r\n\r\n    validateField = (name, value) => {\r\n        let formErrors = this.state.formErrors\r\n        let nameValid = this.state.nameValid\r\n        let surnameValid = this.state.surnameValid\r\n        let birthValid = this.state.birthValid\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                nameValid = value.match(/^[a-z ]+$/i) !== null\r\n                formErrors[name] = nameValid ? '' : `${name} cannot be empty or contain numbers or special characters`\r\n                break\r\n            case 'surname':\r\n                surnameValid = value.match(/^[a-z ]+$/i) !== null\r\n                formErrors[name] = surnameValid ? '' : `${name} cannot be empty or contain numbers or special characters`\r\n                break\r\n            case 'birth':\r\n                birthValid = new Date(this.state.birth).getTime() <= new Date().getTime()\r\n                formErrors[name] = birthValid ? '' : `${name} cannot be set in the future`\r\n                break\r\n            default:\r\n        }\r\n\r\n        this.setState({\r\n            nameValid: nameValid,\r\n            surnameValid: surnameValid,\r\n            birthValid: birthValid,\r\n        }, this.validateForm);\r\n    }\r\n\r\n\r\n    validateForm = () => {\r\n        this.setState({ formValid: this.state.nameValid && this.state.surnameValid && this.state.birthValid })\r\n    }\r\n\r\n\r\n    submit = () => {\r\n        const { name, surname, birth, superpower } = this.state\r\n        fetch('/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                name: name,\r\n                surname: surname,\r\n                birth: birth,\r\n                superpower: superpower,\r\n            }),\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { name, surname, birth, superpower } = this.state\r\n\r\n        return (\r\n            <div className=\"form-cosmonaut-div\"> Add a new cosmonaut\r\n                <form className=\"form-add-cosmonaut\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                        <input type=\"text\" name=\"name\" id=\"name\" value={name} onChange={this.handleAddCosmonautChange} ></input>\r\n                    <label htmlFor=\"surame\">Surame</label>\r\n                        <input type=\"text\" name=\"surname\" id=\"surname\" value={surname} onChange={this.handleAddCosmonautChange} ></input>\r\n                    <label htmlFor=\"birth\">Date of birth</label>\r\n                        <input type=\"date\" name=\"birth\" id=\"birth\" value={birth} onChange={this.handleAddCosmonautChange} ></input>\r\n                    <label htmlFor=\"superpower\">Superpower</label>\r\n                    <input type=\"text\" name=\"superpower\" id=\"superpower\" value={superpower} onChange={this.handleAddCosmonautChange} ></input>\r\n                    <button type=\"submit\" value=\"Add cosmonaut\" disabled={!this.state.formValid} onClick={this.onCosmonautFormSubmit} >Add cosmonaut</button>\r\n                </form>\r\n                <FormErrors errors={this.state.formErrors} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CosmonautForm","import React, { Component } from 'react'\r\nimport './App.css';\r\nimport CosmonautTable from './CosmonautTable'\r\nimport CosmonautForm from './CosmonautForm'\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            cosmonauts: [],\r\n        }\r\n\r\n        this.handleCosmonautFormSubmit = this.handleCosmonautFormSubmit.bind(this)\r\n        this.removeCosmonaut = this.removeCosmonaut.bind(this)\r\n    }\r\n\r\n\r\n    handleCosmonautFormSubmit = (cosmonaut) => {\r\n        this.setState({\r\n            cosmonauts: [...this.state.cosmonauts, cosmonaut]\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        fetch('https://mockend.com/TomasLesicko/cosmonaut-web-app/cosmonauts')\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n\r\n                this.setState({\r\n                    cosmonauts: data.map((cosmonaut) => {\r\n                        return {\r\n                            name: cosmonaut.name,\r\n                            surname: cosmonaut.surname,\r\n                            birth: this.formatDate(cosmonaut.birth),\r\n                            superpower: cosmonaut.superpower,\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n            .catch((error) => (console.log(error)))\r\n    }\r\n\r\n\r\n    formatDate(dateString) {\r\n        const date = new Date(dateString)\r\n        const result = `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`\r\n\r\n        return result\r\n    }\r\n\r\n\r\n    removeCosmonaut = (index) => {\r\n        this.setState(currentState => ({\r\n            cosmonauts: currentState.cosmonauts.filter((cosmonaut, i) => {\r\n                return i !== index\r\n            })\r\n        }))\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <CosmonautForm handleCosmonautFormSubmit={this.handleCosmonautFormSubmit} />\r\n                <CosmonautTable cosmonauts={this.state.cosmonauts} removeCosmonaut={this.removeCosmonaut} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}